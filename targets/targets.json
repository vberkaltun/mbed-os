{
    "Target": {
        "core": null,
        "trustzone": false,
        "default_toolchain": "GCC_ARM",
        "supported_toolchains": null,
        "extra_labels": [],
        "supported_form_factors": [],
        "components": [],
        "is_disk_virtual": false,
        "macros": [],
        "device_has": [],
        "features": [],
        "detect_code": [],
        "public": false,
        "c_lib": "std",
        "bootloader_supported": false,
        "static_memory_defines": true,
        "printf_lib": "minimal-printf",
        "supported_c_libs": {
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full"
        ],
        "config": {
            "console-uart": {
                "help": "Target has UART console on pins CONSOLE_TX, CONSOLE_RX. Value is only significant if target has SERIAL device.",
                "value": true
            },
            "console-uart-flow-control": {
                "help": "Console hardware flow control. Options: null, RTS, CTS, RTSCTS.",
                "value": null
            },
            "network-default-interface-type": {
                "help": "Default network interface type. Typical options: null, ETHERNET, WIFI, CELLULAR, MESH",
                "value": null
            },
            "deep-sleep-latency": {
                "help": "Time in ms required to go to and wake up from deep sleep (max 10)",
                "value": 0
            },
            "app_offset": {
                "help": "Application start offset in ROM",
                "value": null
            },
            "header_offset": {
                "help": "Application header offset in ROM",
                "value": null
            },
            "boot-stack-size": {
                "help": "Define the boot stack size in bytes. This value must be a multiple of 8",
                "value": "0x1000"
            },
            "mpu-rom-end": {
                "help": "Last address of ROM protected by the MPU",
                "value": "0x0fffffff"
            },
            "default-form-factor": {
                "help": "Default form factor of this board taken from supported_form_factors. This must be a lowercase string such as 'arduino'",
                "value": null
            },
            "tickless-from-us-ticker": {
                "help": "Run tickless from the microsecond ticker rather than the low power ticker. Running tickless off of the microsecond ticker improves interrupt latency on targets which use lpticker_delay_ticks",
                "value": false
            },
            "init-us-ticker-at-boot": {
                "help": "Initialize the microsecond ticker at boot rather than on first use, and leave it initialized. This speeds up wait_us in particular.",
                "value": false
            },
            "custom-tickers": {
                "help": "Support custom tickers in addition to USTICKER and LPTICKER. Turning this off can permit some space and speed optimisations, if characteristics of USTICKER and LPTICKER are known at compile time.",
                "value": true
            },
            "xip-enable": {
                "help": "Enable Execute In Place (XIP) on this target. Value is only significant if the board has executable external storage such as QSPIF. If this is enabled, customize the linker file to choose what text segments are placed on external storage",
                "value": false
            },
            "default-adc-vref": {
                "help": "Default reference voltage for ADC (float)",
                "value": "NAN"
            },
            "internal-flash-uniform-sectors": {
                "help": "Target's internal flash has uniform sector sizes",
                "value": true
            }
        }
    },
    "MCU_STM32": {
        "inherits": [
            "Target"
        ],
        "public": false,
        "extra_labels": [
            "STM"
        ],
        "supported_toolchains": [
            "GCC_ARM"
        ],
        "supported_c_libs": {
            "gcc_arm": [
                "std",
                "small"
            ]
        },
        "supported_application_profiles": [
            "full",
            "bare-metal"
        ],
        "macros": [
            "USE_HAL_DRIVER",
            "USE_FULL_LL_DRIVER",
            "TRANSACTION_QUEUE_SIZE_SPI=2"
        ],
        "bootloader_supported": true,
        "config": {
            "lse_available": {
                "help": "Define if a Low Speed External xtal (LSE) is available on the board (0 = No, 1 = Yes). If Yes, the LSE will be used to clock the RTC, LPUART, ... otherwise the Low Speed Internal clock (LSI) will be used",
                "value": "1"
            },
            "rtc_clock_source": {
                "help": "Define the RTC clock source. USE_RTC_CLK_LSE_OR_LSI, USE_RTC_CLK_LSI, USE_RTC_CLK_HSE. LPTICKER is not available for HSE and should be removed from the target configuration.",
                "value": "USE_RTC_CLK_LSE_OR_LSI"
            },
            "lpuart_clock_source": {
                "help": "Define the LPUART clock source. Mask values: USE_LPUART_CLK_LSE, USE_LPUART_CLK_PCLK1, USE_LPUART_CLK_HSI",
                "value": "USE_LPUART_CLK_LSE|USE_LPUART_CLK_PCLK1"
            },
            "stdio_uart_tx": {
                "help": "default TX STDIO pins is defined in PinNames.h file, but it can be overridden"
            },
            "stdio_uart_rx": {
                "help": "default RX STDIO pins is defined in PinNames.h file, but it can be overridden"
            },
            "lpticker_delay_ticks": {
                "help": "https://os.mbed.com/docs/latest/porting/low-power-ticker.html",
                "value": 1,
                "macro_name": "LPTICKER_DELAY_TICKS"
            },
            "lpticker_lptim_clock": {
                "help": "Default value for LPTIM clock (lpticker_lptim == 1). Value is the dividing factor. Choose 1, 2 or 4",
                "value": 1
            },
            "gpio_reset_at_init": {
                "help": "if value set, all GPIO are reset during init",
                "value": false
            }
        },
        "overrides": {
            "deep-sleep-latency": 4,
            "init-us-ticker-at-boot": true
        },
        "device_has": [
            "USTICKER",
            "LPTICKER",
            "RTC",
            "ANALOGIN",
            "I2C",
            "I2CSLAVE",
            "I2C_ASYNCH",
            "INTERRUPTIN",
            "PORTIN",
            "PORTINOUT",
            "PORTOUT",
            "PWMOUT",
            "SERIAL",
            "SERIAL_FC",
            "SLEEP",
            "SPI",
            "SPISLAVE",
            "SPI_ASYNCH",
            "STDIO_MESSAGES",
            "WATCHDOG",
            "RESET_REASON"
        ]
    },
    "MCU_STM32F4": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M4F",
        "extra_labels_add": [
            "STM32F4"
        ],
        "components_add": [
            "FLASHIAP"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            }
        },
        "overrides": {
            "internal-flash-uniform-sectors": false
        },
        "device_has_add": [
            "SERIAL_ASYNCH",
            "FLASH",
            "MPU"
        ]
    },
    "MCU_STM32F401xE": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F401xE"
        ],
        "macros_add": [
            "STM32F401xE"
        ]
    },
    "NUCLEO_F401RE": {
        "inherits": [
            "MCU_STM32F401xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0720"
        ],
        "device_name": "STM32F401RETx"
    },
    "MCU_STM32F411xE": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "macros_add": [
            "STM32F411xE"
        ],
        "extra_labels_add": [
            "STM32F411xE"
        ]
    },
    "NUCLEO_F411RE": {
        "inherits": [
            "MCU_STM32F411xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0740"
        ],
        "device_name": "STM32F411RETx"
    },
    "MCU_STM32F412xG": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F412xG"
        ],
        "macros_add": [
            "STM32F412Zx"
        ],
        "device_has_add": [
            "CAN",
            "TRNG"
        ]
    },
    "NUCLEO_F412ZG": {
        "inherits": [
            "MCU_STM32F412xG"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0826"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32F412ZGTx"
    },
    "MCU_STM32F413xH": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F413xH"
        ],
        "config": {
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            }
        },
        "overrides": {
            "lpticker_delay_ticks": 4
        },
        "macros_add": [
            "STM32F413xx",
            "MBED_TICKLESS"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "TRNG"
        ]
    },
    "NUCLEO_F413ZH": {
        "inherits": [
            "MCU_STM32F413xH"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0743"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32F413ZHTx"
    },
    "MCU_STM32F429xI": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F429xI"
        ],
        "macros_add": [
            "STM32F429xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "TRNG"
        ]
    },
    "NUCLEO_F429ZI": {
        "inherits": [
            "MCU_STM32F429xI"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "d11_configuration": {
                "help": "Value: PA_7 for the default board configuration, PB_5 in case of solder bridge update (SB121 off/ SB122 on)",
                "value": "PA_7",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            },
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_FS"
            }
        },
        "features_add": [
            "PSA"
        ],
        "extra_labels_add": [
            "MBED_PSA_SRV"
        ],
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "detect_code": [
            "0796"
        ],
        "device_name": "STM32F429ZITx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        }
    },
    "MCU_STM32F439xI": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F439xI"
        ],
        "macros_add": [
            "STM32F439xx",
            "MBEDTLS_CONFIG_HW_SUPPORT"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN",
            "TRNG"
        ]
    },
    "NUCLEO_F439ZI": {
        "inherits": [
            "MCU_STM32F439xI"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "d11_configuration": {
                "help": "Value: PA_7 for the default board configuration, PB_5 in case of solder bridge update (SB121 off/ SB122 on)",
                "value": "PA_7",
                "macro_name": "STM32_D11_SPI_ETHERNET_PIN"
            },
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_FS"
            }
        },
        "device_has_add": [
            "EMAC",
            "USBDEVICE"
        ],
        "detect_code": [
            "0797"
        ],
        "device_name": "STM32F439ZITx",
        "overrides": {
            "network-default-interface-type": "ETHERNET"
        }
    },
    "MCU_STM32F446xE": {
        "inherits": [
            "MCU_STM32F4"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32F446xE"
        ],
        "macros_add": [
            "STM32F446xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "CAN"
        ]
    },
    "NUCLEO_F446RE": {
        "inherits": [
            "MCU_STM32F446xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0777"
        ],
        "device_name": "STM32F446RETx"
    },
    "NUCLEO_F446ZE": {
        "inherits": [
            "MCU_STM32F446xE"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "config": {
            "usb_speed": {
                "help": "USE_USB_OTG_FS or USE_USB_OTG_HS or USE_USB_HS_IN_FS",
                "value": "USE_USB_OTG_FS"
            }
        },
        "detect_code": [
            "0778"
        ],
        "device_has_add": [
            "USBDEVICE"
        ],
        "device_name": "STM32F446ZETx"
    },
    "MCU_STM32L0": {
        "inherits": [
            "MCU_STM32"
        ],
        "public": false,
        "core": "Cortex-M0+",
        "extra_labels_add": [
            "STM32L0"
        ],
        "config": {
            "clock_source": {
                "help": "Mask value : USE_PLL_HSE_EXTC (need HW patch) | USE_PLL_HSE_XTAL (need HW patch) | USE_PLL_HSI",
                "value": "USE_PLL_HSE_EXTC|USE_PLL_HSI",
                "macro_name": "CLOCK_SOURCE"
            },
            "lpticker_lptim": {
                "help": "This target supports LPTIM. Set value 1 to use LPTIM for LPTICKER, or 0 to use RTC wakeup timer",
                "value": 1
            },
            "lse_drive_load_level": {
                "help": "HSE drive load level  RCC_LSEDRIVE_LOW | RCC_LSEDRIVE_MEDIUMLOW | RCC_LSEDRIVE_MEDIUMHIGH | RCC_LSEDRIVE_HIGH",
                "value": "RCC_LSEDRIVE_LOW"
            },
            "i2c_timing_value_algo": {
                "help": "If value was set to true I2C timing algorithm is enabled. Enabling may leads to performance issue. Keeping this false and changing system clock will trigger assert.)",
                "value": false
            }
        },
        "macros_add": [
            "MBED_TICKLESS",
            "EXTRA_IDLE_STACK_REQUIRED"
        ],
        "overrides": {
            "lpticker_delay_ticks": 0
        },
        "device_has_add": [
            "CRC",
            "SERIAL_ASYNCH",
            "FLASH",
            "MPU"
        ]
    },
    "MCU_STM32L073xB": {
        "inherits": [
            "MCU_STM32L0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L073xB"
        ],
        "macros_add": [
            "STM32L073xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "TRNG"
        ]
    },
    "NUCLEO_L073RB": {
        "inherits": [
            "MCU_STM32L073xB"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0447"
        ],
        "device_name": "STM32L073RBTx"
    },
    "MCU_STM32L073xZ": {
        "inherits": [
            "MCU_STM32L0"
        ],
        "public": false,
        "extra_labels_add": [
            "STM32L073xZ"
        ],
        "macros_add": [
            "STM32L073xx"
        ],
        "device_has_add": [
            "ANALOGOUT",
            "TRNG"
        ]
    },
    "NUCLEO_L073RZ": {
        "inherits": [
            "MCU_STM32L073xZ"
        ],
        "supported_form_factors": [
            "ARDUINO_UNO"
        ],
        "detect_code": [
            "0760"
        ],
        "device_name": "STM32L073RZTx"
    }
}
